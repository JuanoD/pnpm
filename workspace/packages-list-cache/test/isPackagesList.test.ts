import { isPackagesList } from '../src/isPackagesList'

test('isPackagesList() returns false', () => {
  expect(isPackagesList(undefined)).toBe(false)
  expect(isPackagesList(null)).toBe(false)
  expect(isPackagesList(true)).toBe(false)
  expect(isPackagesList(false)).toBe(false)
  expect(isPackagesList(0)).toBe(false)
  expect(isPackagesList('')).toBe(false)
  expect(isPackagesList([])).toBe(false)
  expect(isPackagesList({})).toBe(false)
  expect(isPackagesList({ workspaceDir: '' })).toBe(false)
  expect(isPackagesList({ projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: undefined, projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: null, projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: true, projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: false, projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: 0, projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: [], projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: {}, projectRootDirs: [] })).toBe(false)
  expect(isPackagesList({ workspaceDir: '', projectRootDirs: undefined })).toBe(false)
  expect(isPackagesList({ workspaceDir: '', projectRootDirs: null })).toBe(false)
  expect(isPackagesList({ workspaceDir: '', projectRootDirs: true })).toBe(false)
  expect(isPackagesList({ workspaceDir: '', projectRootDirs: false })).toBe(false)
  expect(isPackagesList({ workspaceDir: '', projectRootDirs: 0 })).toBe(false)
  expect(isPackagesList({ workspaceDir: '', projectRootDirs: {} })).toBe(false)
})

test('isPackagesList() returns true', () => {
  expect(isPackagesList({ workspaceDir: '', projectRootDirs: [] })).toBe(true)
})
